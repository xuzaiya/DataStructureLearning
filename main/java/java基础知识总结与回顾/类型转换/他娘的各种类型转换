1.string -> int
        String str1 = "123";
        int value = Integer.valueOf(str1);

        String str1 = "123";
        int value2 = Integer.parseInt(str1);


2.int -> string
        int value = 123;
        String str1 = String.valueOf(value);

        int value = 123;
        String str2 =Integer.toString(value);



3.Integer -> String
        //方法一:Integer类的静态方法toString()
        Integer a = 2;
        String str = Integer.toString(a)

        //方法二:Integer类的成员方法toString()
        Integer a = 2;
        String str = a.toString();

        //方法三:String类的静态方法valueOf()
        Integer a = 2;
        String str = String.valueOf(a);


4. String -> Integer

        String str = "123";
        Integer value = Integer.valueOf(str);
        Integer value2 = Integer.parseInt(str);


5. int -> Integer

        int a = 123;
        Integer value = new Integer(a);
        Integer value2 = Integer.valueOf(a);


6. Integer -> int
        Integer a = 123;
        int value = a.intValue();


7. String -> float

        String str = "123";
        float value = Float.valueOf(str);
        float value2 = Float.parseFloat(str);

8. float -> String
        float a = 123.0f;
        String str = String.valueOf(a);
        String str2 = Float.toString(a);


9. Float -> String

        Float a = 123f;
        String str1 = a.toString();
        String str2 = String.valueOf(a);
        String str3 = a.toString();


10. String -> Float

        String str = "123";
        Float value = Float.valueOf(str);
        Float value2 = Float.parseFloat(str);


11. String 与double   string与long   同理




12. String -> char

        String str = "yangxu";
        char c = str.charAt(1);



13. char -> String

        char c = 'c';
        String str = String.valueOf(c);
        String str2 = Character.toString(c);
        String str3 = new Character(c).toString();
        String str4 = new String(new char[]{'c'});


14. char[] -> String

        char [] c = new char[]{'a','b','c'};
        String str =String.copyValueOf(c);

15. String -> char[]

        String str = "yangxu";
        char[] arr= str.toCharArray();



16. Integer[] -> int[]

        Integer[] arr = new Integer[]{1,2,3,4,5,6,76};
        int[] arrs = Arrays.stream(arr).mapToInt(Integer::valueOf).toArray();


17. int[] -> Integer[]

        int[] a={1,3,4};
        Integer[] arr= IntStream.of(a).boxed().collect(Collectors.toList()).toArray(new Integer[0]);

        Integer[] integers = Arrays.stream(a).boxed().toArray(Integer[]::new);


18. List<Integer> -> int[]

        List< Integer > list = new ArrayList<>();
        list.add(165);
        list.add(25);
        list.add(24);
        list.add(23);
        int[] int1 = list.stream().mapToInt(Integer::valueOf).toArray();
        int[] int2 = list.stream().mapToInt(Integer::intValue).toArray();

19. int[] -> List<Integer>

        int[] arr = {1,2,3,4,45};
        List list = Arrays.stream(arr).boxed().collect(Collectors.toList());


20. Integer[] -> List<Integer>

        Integer[] arr= {23,12,14};
        List<Integer> list=Arrays.asList(arr);
        List<Integer> list1 = new ArrayList<>(Arrays.asList(arr));



